{"version":3,"sources":["Clock/Clock.jsx","App.js","index.js"],"names":["Clock","prev","name","this","props","console","log","time","React","Component","App","state","isClockVisible","clockName","Date","toLocaleTimeString","changeAndLogTime","setState","timer","setInterval","clearInterval","className","type","onClick","Math","random","ReactDOM","render","document","getElementById"],"mappings":"uMAGaA,EAAb,iLACqBC,GACbA,EAAKC,OAASC,KAAKC,MAAMF,MAE3BG,QAAQC,IAAR,qCACgCL,EAAKC,KADrC,eACgDC,KAAKC,MAAMF,SALjE,+BAWI,OACE,oCACE,2CAEG,IACAC,KAAKC,MAAMG,WAhBtB,GAA2BC,IAAMC,W,MCM1B,IAAMC,EAAb,4MACEC,MAAQ,CACNC,gBAAgB,EAChBC,UAAW,KACXN,MAAM,IAAIO,MAAOC,sBAJrB,EAiBEC,iBAAmB,WACjB,EAAKC,SACH,CAAEV,MAAM,IAAIO,MAAOC,uBAEjB,EAAKJ,MAAMC,gBAEXP,QAAQC,IAAI,EAAKK,MAAMJ,OAvB/B,kEAQIJ,KAAKc,SACH,CAAEC,MAAOC,YAAYhB,KAAKa,iBAAkB,SATlD,6CAcII,cAAcjB,KAAKQ,MAAMO,SAd7B,+BA2BY,IAAD,OACP,OACE,yBAAKG,UAAU,OACb,2CAEClB,KAAKQ,MAAMC,gBACV,kBAAC,EAAD,CACEA,eAAgBT,KAAKQ,MAAMC,eAC3BV,KAAMC,KAAKQ,MAAME,UACjBN,KAAMJ,KAAKQ,MAAMJ,OAIrB,yBAAKc,UAAU,gBACb,yBAAKA,UAAU,qBACb,4BACEC,KAAK,SACLD,UAAU,UACVE,QACE,WACE,EAAKN,SACH,CAAEL,gBAAgB,MAN1B,cAcA,4BACEU,KAAK,SACLD,UAAU,UACVE,QACE,WACE,EAAKN,SACH,CAAEL,gBAAgB,MAN1B,eAeF,4BACEU,KAAK,SACLD,UAAU,gBACVE,QACE,WACE,EAAKN,SACH,CAAEJ,UAhFXW,KAAKC,aA0EJ,qBAvEV,GAAyBjB,IAAMC,WCL/BiB,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.6c532c14.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Clock extends React.Component {\n  componentDidUpdate(prev) {\n    if (prev.name !== this.props.name) {\n      // eslint-disable-next-line\n      console.log(\n        `The Clock was renamed from ${prev.name} to ${this.props.name}`,\n      );\n    }\n  }\n\n  render() {\n    return (\n      <>\n        <p>\n          Current time:\n          {' '}\n          {this.props.time}\n        </p>\n      </>\n    );\n  }\n}\n\nClock.propTypes = PropTypes.shape(\n  {\n    time: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isClockVisible: PropTypes.bool.isRequired,\n  },\n).isRequired;\n","import React from 'react';\nimport { Clock } from './Clock';\n\nimport './App.scss';\n\nfunction letRandomName() {\n  return Math.random();\n}\n\nexport class App extends React.Component {\n  state = {\n    isClockVisible: true,\n    clockName: null,\n    time: new Date().toLocaleTimeString(),\n  }\n\n  componentDidMount() {\n    this.setState(\n      { timer: setInterval(this.changeAndLogTime, 1000) },\n    );\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.timer);\n  }\n\n  changeAndLogTime = () => {\n    this.setState(\n      { time: new Date().toLocaleTimeString() },\n    );\n    if (this.state.isClockVisible) {\n      // eslint-disable-next-line\n        console.log(this.state.time);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n\n        {this.state.isClockVisible && (\n          <Clock\n            isClockVisible={this.state.isClockVisible}\n            name={this.state.clockName}\n            time={this.state.time}\n          />\n        )}\n\n        <div className=\"button-block\">\n          <div className=\"visablity-buttons\">\n            <button\n              type=\"button\"\n              className=\"changer\"\n              onClick={\n                () => {\n                  this.setState(\n                    { isClockVisible: true },\n                  );\n                }\n              }\n            >\n              Show Clock\n            </button>\n\n            <button\n              type=\"button\"\n              className=\"changer\"\n              onClick={\n                () => {\n                  this.setState(\n                    { isClockVisible: false },\n                  );\n                }\n              }\n            >\n              Hide Clock\n            </button>\n          </div>\n\n          <button\n            type=\"button\"\n            className=\"random-button\"\n            onClick={\n              () => {\n                this.setState(\n                  { clockName: letRandomName() },\n                );\n              }\n            }\n          >\n            Random name\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}